% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{display3d}
\alias{display3d}
\alias{display3d.Canopy}
\alias{display3d.VolumeSet}
\title{Plot a canopy or a set of volumes in 3D}
\usage{
display3d(data, ...)

\method{display3d}{Canopy}(data, color, fraction = 1, ...)

\method{display3d}{VolumeSet}(data, color, label = "no", ...)
}
\arguments{
\item{data}{A \code{c("data.frame", "Canopy")} or \code{c("data.frame",
"VolumeSet")} object.}

\item{...}{Further potential arguments passed to
\code{\link[rgl]{shapelist3d}}.}

\item{color}{A color character or a polygon label to use to colorize the 3D
scene.}

\item{fraction}{The fraction of rows to select.}

\item{label}{Display ("levels" or "indices") or no display ("no") labels for
each volume. "levels" displays "labels" consisting of the volume ID and
"indices", just a number, corresponding to the row number.}
}
\value{
An object of class \code{c("shapelist3d", "shape3d")}.
}
\description{
Canopies or Volumes viewed in 3D using \code{rgl} package features.
}
\details{
This function is basically a wrapper of \code{\link[rgl]{shapelist3d}}
(package \code{rgl}) with a seamless interface with \code{Canopy} objects
(returned by the function \code{\link{readCan}}) or \code{VolumeSet} objects
(returned by the function \code{\link{makeVolumeSet}}).

Note that the plotting process may be time-consuming with a large number of
polygons. Consider using the parameter \code{fraction} when plotting a
\code{Canopy} to only select a random subset of all the polygons.
}
\examples{
plants <- readCan("/path/to/file/field.can")
display3d(plants)
display3d(plants, frac = 0.1)
display3d(plants, col = rgb(0, 0.7, 0))
display3d(plants, col = "green4", alpha = 0.3)
display3d(plants, col = "plantID")

rangeDim <- function(can, dim) {
    range(sapply(can$vertices, function(i) range(i[, dim])))
}
volumes <- makeVolumeSet(rangeDim(plants, "x"),
                         rangeDim(plants, "y"),
                         rangeDim(plants, "z"),
                         intervals = rep(3, 3))
display3d(volumes)
display3d(volumes, color = rgb(0.7, 0, 0.7), alpha = 0.3)
display3d(volumes, color = "red", alpha = 0.3)
display3d(volumes, color = "volumeID")

}
\seealso{
\code{\link[rgl]{display3d}} in the \code{rgl} package for a more
  detailed explanation.
}

